{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c7c2a70e",
   "metadata": {},
   "source": [
    "# input函数"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "63f492f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tell me something, and I will repeat it back to you:1\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "message = input(\"Tell me something, and I will repeat it back to you:\")\n",
    "print(message)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "52e2be7a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter your name: feichang\n",
      "\n",
      "Hello, feichang!\n"
     ]
    }
   ],
   "source": [
    "name = input(\"Please enter your name: \")\n",
    "print(f\"\\nHello, {name}!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "37f16ed0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "If you share your name, we can personalize the messages you see.\n",
      " What is your first name?Chang\n",
      "Hello,Chang!\n"
     ]
    }
   ],
   "source": [
    "prompt = \"\\nIf you share your name, we can personalize the messages you see.\"\n",
    "prompt+=\"\\n What is your first name?\"\n",
    "name=input(prompt)\n",
    "print(f\"Hello,{name}!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de321e8a",
   "metadata": {},
   "source": [
    "int()  因为input函数把输入解读为字符串，int()将输入作为数来使用就不会出错.在将数值输入用于计算和比较前，务必将其转换为数值表示"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8410e352",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How old are you?20\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "age=input(\"How old are you?\")\n",
    "age=int(age)\n",
    "age<=8\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b08d5b96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How tall are you,in inches?39\n",
      "\n",
      "You'll be able to ride when you're a little older.\n"
     ]
    }
   ],
   "source": [
    "height=input('How tall are you,in inches?')\n",
    "height=int(height)\n",
    "\n",
    "if height>=46:\n",
    "    print(\"\\nYou're tall enough to ride!\")\n",
    "else:\n",
    "    print(\"\\nYou'll be able to ride when you're a little older.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1222e99e",
   "metadata": {},
   "source": [
    "求模运算符 %  与余数有关"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a2be6460",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "4%2#指出4除以2的余数为0，即可以整除"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ee3a8bae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a number, and I'll tell you if it's even or odd:5\n",
      "\n",
      "The number 5 is odd.\n"
     ]
    }
   ],
   "source": [
    "number = input(\"Enter a number, and I'll tell you if it's even or odd:\")\n",
    "number = int(number)\n",
    "if number % 2 == 0:\n",
    "    print(f\"\\nThe number {number} is even.\")\n",
    "else:\n",
    "    print(f\"\\nThe number {number} is odd.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef7dd1c6",
   "metadata": {},
   "source": [
    "# while循环"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb5a471a",
   "metadata": {},
   "source": [
    "自赋值：自己给自己运算，然后赋值，改变自己的值, eg,  current_number += 1 就是 current_number =\n",
    "current_number + 1 的简写"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ad25d8ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n"
     ]
    }
   ],
   "source": [
    "current_number=0\n",
    "while current_number<5:\n",
    "    print(current_number)\n",
    "    current_number+=1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef0b2b99",
   "metadata": {},
   "source": [
    "## 退出值（可以让程序退出）和不等运算符!="
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "ba374e57",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Tell me something, and I will repeat it back :\n",
      "Enter 'quit' to end the program. quit\n",
      "quit\n"
     ]
    }
   ],
   "source": [
    "prompt='\\n Tell me something, and I will repeat it back :'\n",
    "prompt+=\"\\nEnter 'quit' to end the program. \"\n",
    "\n",
    "message=\"\"\n",
    "while message!=\"quit\":\n",
    "    message=input(prompt)\n",
    "    print(message)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "84daf162",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      " Tell me something, and I will repeat it back :\n",
      "Enter 'quit' to end the program. quit\n"
     ]
    }
   ],
   "source": [
    "prompt='\\n Tell me something, and I will repeat it back :'\n",
    "prompt+=\"\\nEnter 'quit' to end the program. \"\n",
    "\n",
    "message=\"\"\n",
    "while message!=\"quit\":\n",
    "    message=input(prompt)\n",
    "    if message!=\"quit\":\n",
    "        print(message)\n",
    "    #这样的话，如果输入的事quit，那么程序不会返回quit这个单词"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31f2c367",
   "metadata": {},
   "source": [
    "标志：active = True\n",
    " while active:\n",
    "        或者while True,检查程序是否处于运行状态"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "29151453",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Enter 'quit' to end the program. trap\n",
      "trap\n",
      "\n",
      "Enter 'quit' to end the program. quit\n"
     ]
    }
   ],
   "source": [
    " prompt = \"\\nTell me something, and I will repeat it back to you:\"\n",
    "prompt+=\"\\nEnter 'quit' to end the program. \"\n",
    "active = True\n",
    "while active:\n",
    "    message = input(prompt)\n",
    "    if message == 'quit':\n",
    "        active = False\n",
    "    else:\n",
    "        print(message)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f3c1833",
   "metadata": {},
   "source": [
    "# 使用break退出循环"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87cbe189",
   "metadata": {},
   "source": [
    "# break立即退出循环 和 continue 可以返回循环开头"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ab532738",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Please enter the name of a city you have visited:\n",
      "(Enter 'quit' when you are finished.) nanjing\n",
      "I'd love to go to Nanjing!\n",
      "\n",
      "Please enter the name of a city you have visited:\n",
      "(Enter 'quit' when you are finished.) quit\n"
     ]
    }
   ],
   "source": [
    "prompt = \"\\nPlease enter the name of a city you have visited:\"\n",
    "prompt += \"\\n(Enter 'quit' when you are finished.) \"\n",
    "while True:\n",
    "    city = input(prompt)\n",
    "    if city == 'quit':\n",
    "        break\n",
    "    else:\n",
    "        print(f\"I'd love to go to {city.title()}!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2948fdeb",
   "metadata": {},
   "source": [
    "# 在循环中使用 continue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "133199e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "3\n",
      "5\n",
      "7\n",
      "9\n"
     ]
    }
   ],
   "source": [
    "current_number=0\n",
    "while current_number<10:\n",
    "    current_number+=1\n",
    "    if current_number%2==0:\n",
    "        continue\n",
    "        \n",
    "    print(current_number)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "679ba315",
   "metadata": {},
   "source": [
    "# 循环与列表"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "5bab2bb3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Verifying user: Candace\n",
      "Verifying user: Brian\n",
      "Verifying user: Alice\n",
      "\n",
      "The following users have been confirmed:\n",
      "Candace\n",
      "Brian\n",
      "Alice\n"
     ]
    }
   ],
   "source": [
    "unconfirmed_users = ['alice', 'brian', 'candace']\n",
    "confirmed_users=[]\n",
    "while unconfirmed_users:\n",
    "    current_user=unconfirmed_users.pop()#删去列表最后一个元素，并且这个元素依旧可以用\n",
    "    print(f\"Verifying user: {current_user.title()}\")\n",
    "    confirmed_users.append(current_user)\n",
    "print(\"\\nThe following users have been confirmed:\")\n",
    "for confirmed_user in confirmed_users:\n",
    "    print(confirmed_user.title())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4859c940",
   "metadata": {},
   "source": [
    "while 循环删除列表中所有为特定值的元素"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "52ea33df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['dog', 'dog', 'goldfish', 'rabbit']\n"
     ]
    }
   ],
   "source": [
    "pets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\n",
    "while 'cat'in pets:\n",
    "    pets.remove('cat')\n",
    "    \n",
    "print(pets)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12337bdf",
   "metadata": {},
   "source": [
    "# while与字典"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "ae6eff1a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "What is your name? fei\n",
      "Which mountain would you like to climb someday?huangshan\n",
      "Would you like to let another person respond?(yes/no) yes\n",
      "\n",
      "What is your name? er\n",
      "Which mountain would you like to climb someday?sd\n",
      "Would you like to let another person respond?(yes/no) no\n",
      "\n",
      "--- Poll Results ---\n",
      "fei would like to climb huangshan.\n",
      "er would like to climb sd.\n"
     ]
    }
   ],
   "source": [
    "responses={}\n",
    "polling_active=True\n",
    "while polling_active:\n",
    "    name = input(\"\\nWhat is your name? \")\n",
    "    response = input(\"Which mountain would you like to climb someday?\")\n",
    "    responses[name] = response\n",
    "    \n",
    "    repeat = input(\"Would you like to let another person respond?(yes/no) \")\n",
    "    if repeat == 'no':\n",
    "         polling_active = False\n",
    "            \n",
    "print(\"\\n--- Poll Results ---\")\n",
    "for name, response in responses.items():\n",
    "    print(f\"{name} would like to climb {response}.\")     \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f83d2d7",
   "metadata": {},
   "source": [
    "# 书上作业"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2b3a8140",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What kind of taxi do you want? Subaru.\n",
      "Let me see if I can find you a  Subaru.\n"
     ]
    }
   ],
   "source": [
    "message=input('What kind of taxi do you want?')\n",
    "print(f\"Let me see if I can find you a {message}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c6079bd5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0bf8d517",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How many people will have a meal?13\n",
      "There is no table avaliable.\n"
     ]
    }
   ],
   "source": [
    "message=input('How many people will have a meal?')\n",
    "message=int(message)\n",
    "if message>8:\n",
    "    print('There is no table avaliable.')\n",
    "else:\n",
    "    print(\"There is tables avaliable.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea00e608",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e7934d33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tell me a number, and I will tell you if it is a multiple of 1067\n",
      "It is not a multiple of 10.\n"
     ]
    }
   ],
   "source": [
    "number=input(\"Tell me a number, and I will tell you if it is a multiple of 10\")\n",
    "number=int(number)\n",
    "if number%10==0:\n",
    "    print('It is a multiple of 10.')\n",
    "else:\n",
    "    print(\"It is not a multiple of 10.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "628b1f16",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e041c42e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.cheese\n",
      "cheese\n",
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.potato\n",
      "potato\n",
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.quit\n"
     ]
    }
   ],
   "source": [
    "#在while循环中使用条件测试来结束循环\n",
    "topping=\"\\nPlease tell me  your topping of the pizza:\"\n",
    "topping+=\"\\nEnter 'quit' to finish your topping.\"\n",
    "food=\"\"\n",
    "while food!=\"quit\":\n",
    "    food=input(topping)\n",
    "    if food!='quit':\n",
    "        print(food)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "cf8e5c46",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.cheese\n",
      "cheese\n",
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.quit\n"
     ]
    }
   ],
   "source": [
    "#在while 循环中使用标志来结束循环\n",
    "topping=\"\\nPlease tell me  your topping of the pizza:\"\n",
    "topping+=\"\\nEnter 'quit' to finish your topping.\"\n",
    "active=True\n",
    "while active:\n",
    "    food=input(topping)\n",
    "    if food=='quit':\n",
    "        active=False\n",
    "    else:\n",
    "        print(food)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "822ded2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.cheese\n",
      "cheese\n",
      "\n",
      "Please tell me  your topping of the pizza:\n",
      "Enter 'quit' to finish your topping.quit\n"
     ]
    }
   ],
   "source": [
    "#在while循环中使用break来退出循环\n",
    "topping=\"\\nPlease tell me  your topping of the pizza:\"\n",
    "topping+=\"\\nEnter 'quit' to finish your topping.\"\n",
    "while True:\n",
    "    food=input(topping)\n",
    "    if food=='quit':\n",
    "        break\n",
    "    else:\n",
    "        print(food)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1991af37",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "8375062a",
   "metadata": {},
   "source": [
    "在 while 循环中使用条件测试来结束循环"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "bd089f95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "How old are you?\n",
      "Enter 'quit' to finish.34\n",
      "Your ticket is 15 dollars.\n",
      "\n",
      "How old are you?\n",
      "Enter 'quit' to finish.quit\n"
     ]
    }
   ],
   "source": [
    "ages='\\nHow old are you?'\n",
    "ages+=\"\\nEnter 'quit' to finish.\"\n",
    "\n",
    "ages_user=input(ages)\n",
    "while ages_user!=\"quit\":\n",
    "    \n",
    "    \n",
    "    if int(ages_user)<3:\n",
    "        print(\"Your ticket is free.\")\n",
    "    if  3<=int(ages_user)<12:\n",
    "        print('Your ticket is 10 dollars.')\n",
    "    if int(ages_user)>=12:\n",
    "        print(\"Your ticket is 15 dollars.\")\n",
    "    ages_user=input(ages)\n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe8e2e1d",
   "metadata": {},
   "source": [
    "使用标志来控制循环结束的时机"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "20bfdc1c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How old are you?\n",
      "Enter 'quit' to finish.12\n",
      "Your ticket is 15 dollars.\n",
      "How old are you?\n",
      "Enter 'quit' to finish.34\n",
      "Your ticket is 15 dollars.\n",
      "How old are you?\n",
      "Enter 'quit' to finish.quit\n"
     ]
    }
   ],
   "source": [
    "ages='How old are you?'\n",
    "ages+=\"\\nEnter 'quit' to finish.\"\n",
    "active=True\n",
    "while active:\n",
    "    ages_user=input(ages)\n",
    "    if ages_user==\"quit\":\n",
    "        active=False\n",
    "    else:\n",
    "        if int(ages_user)<3:\n",
    "            print(\"Your ticket is free.\")\n",
    "        if  3<=int(ages_user)<12:\n",
    "            print('Your ticket is 10 dollars.')\n",
    "        if int(ages_user)>=12:\n",
    "            print(\"Your ticket is 15 dollars.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5da2b515",
   "metadata": {},
   "source": [
    "break 退出循环"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "95e474e1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How old are you?\n",
      "Enter 'quit' to finish.23\n",
      "Your ticket is 15 dollars.\n",
      "How old are you?\n",
      "Enter 'quit' to finish.12\n",
      "Your ticket is 15 dollars.\n",
      "How old are you?\n",
      "Enter 'quit' to finish.quit\n"
     ]
    }
   ],
   "source": [
    "ages='How old are you?'\n",
    "ages+=\"\\nEnter 'quit' to finish.\"\n",
    "while True:\n",
    "    age_user=input(ages)\n",
    "    if age_user=='quit':\n",
    "        break\n",
    "    else:\n",
    "        if int(age_user)<3:\n",
    "            print(\"Your ticket is free.\")\n",
    "        if  3<=int(age_user)<12:\n",
    "            print('Your ticket is 10 dollars.')\n",
    "        if int(age_user)>=12:\n",
    "            print(\"Your ticket is 15 dollars.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c6161bc9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "e639165d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I made your tuna sandwich.\n",
      "I made your pastrami sandwich.\n",
      "I made your pork sandwich.\n",
      "I made your pastrami sanwich.\n",
      "I made your pastrami sandwich.\n",
      "['pastrami sandwich']\n",
      "['pastrami sandwich', 'pastrami sanwich']\n",
      "['pastrami sandwich', 'pastrami sanwich', 'pork sandwich']\n",
      "['pastrami sandwich', 'pastrami sanwich', 'pork sandwich', 'pastrami sandwich']\n",
      "['pastrami sandwich', 'pastrami sanwich', 'pork sandwich', 'pastrami sandwich', 'tuna sandwich']\n",
      "\n",
      "cooking results:\n",
      "pastrami sandwich\n",
      "pastrami sanwich\n",
      "pork sandwich\n",
      "pastrami sandwich\n",
      "tuna sandwich\n"
     ]
    }
   ],
   "source": [
    "sandwich_orders=['tuna sandwich','pastrami sandwich','pork sandwich','pastrami sanwich','pastrami sandwich']\n",
    "finished_sandwiches=[]\n",
    "for sandwich_order in sandwich_orders:\n",
    "    print(f\"I made your {sandwich_order}.\")\n",
    "    \n",
    "while sandwich_orders:\n",
    "    finished_sandwich=sandwich_orders.pop()\n",
    "    finished_sandwiches.append(finished_sandwich)\n",
    "    print(finished_sandwiches)\n",
    "print('\\ncooking results:')\n",
    "for sandwich in finished_sandwiches:\n",
    "    print(sandwich)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "758072b7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "c2f5fcda",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "All the pastrami sandwiches have been sold out.\n",
      "pastrami sanwich\n",
      "pork sandwich\n",
      "tuna sandwich\n"
     ]
    }
   ],
   "source": [
    "sandwich_orders=['tuna sandwich','pastrami sandwich','pork sandwich','pastrami sanwich','pastrami sandwich']\n",
    "finished_sandwiches=[]\n",
    "print('All the pastrami sandwiches have been sold out.')\n",
    "\n",
    "while 'pastrami sandwich'in sandwich_orders:\n",
    "    sandwich_orders.remove( 'pastrami sandwich') \n",
    "while sandwich_orders:\n",
    "    finished_sandwich=sandwich_orders.pop()\n",
    "    finished_sandwiches.append(finished_sandwich)\n",
    "for finished_sandwich in finished_sandwiches:\n",
    "    print(finished_sandwich)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b146652",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "8a5ea6ed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "What is your name? fei\n",
      "“If you could visit one place in the world, wherewould you go?nowhere\n"
     ]
    }
   ],
   "source": [
    "surveys={}\n",
    "survey_active=True\n",
    "while survey_active:\n",
    "    name = input(\"\\nWhat is your name? \")\n",
    "    survey = input(\"“If you could visit one place in the world, wherewould you go?\")\n",
    "    surveys[name] = survey\n",
    "    \n",
    "    if survey=='nowhere':\n",
    "        survey_active=False\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b2a1064a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
